services:
  frontend:
    container_name: dms-frontend
    build:
      context: ./dms-frontend
      dockerfile: Dockerfile

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    expose:
      - "80"
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx.middle.conf:/etc/nginx/conf.d/default.conf:rw

  backend:
    build:
      context: ./dms-backend
      dockerfile: ./Dockerfile
    container_name: dms-backend
    depends_on:
      - db
      - minio
    environment:
      - POSTGRES_USER=dms
      - POSTGRES_PASSWORD=dms
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/dms
      - SPRING_DATASOURCE_USERNAME=dms
      - SPRING_DATASOURCE_PASSWORD=dms
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080:8080"

  db:
    container_name: dms-db
    image: postgres:latest
    environment:
      POSTGRES_DB: dms
      POSTGRES_USER: dms
      POSTGRES_PASSWORD: dms
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "9093:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=dms
      - RABBITMQ_DEFAULT_PASS=dms

  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      - MINIO_ROOT_USER=dms-minio
      - MINIO_ROOT_PASSWORD=dms-minio
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9090"
volumes:
  db-data:
  minio-data: