name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - sprint-7
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Build Docker Compose Services
      - name: Build Docker Compose
        run: docker-compose -f ./docker-compose.yml build

      # Start Services in Background
      - name: Start Docker Compose
        run: docker-compose -f ./docker-compose.yml up -d

      # Wait for Services to be Healthy
      - name: Wait for Services to be Ready
        run: |
          until docker-compose exec db pg_isready -U dms; do
            echo "Waiting for DB to be ready..."
            sleep 5
          done

      # Install dependencies (for Node.js example)
      - name: Install Dependencies for dms-backend
        run: |
          cd dms-backend
          npm install

      # Run Unit Tests for dms-backend (for Node.js example)
      - name: Run Unit Tests for dms-backend
        run: |
          cd dms-backend
          npm test

      # Stop and Cleanup
      - name: Stop Docker Compose
        if: always()
        run: docker-compose -f ./docker-compose.yml down --volumes
